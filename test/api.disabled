-module(api_SUITE).

-compile(export_all).

-include_lib("common_test/include/ct.hrl").


suite() ->
		[{timetrap,{seconds,20}}].

init_per_suite(Config) ->
	os:putenv("PG_DATABASE", "eneo-test"),
	os:putenv("PG_USER", "bjarne"),
	os:putenv("PG_PASSWORD", "password"),
	application:ensure_all_started(eneo),
	ibrowse:start(),
	{ok, Conn} = test_lib:db(),
	[{conn, Conn}|Config].

end_per_suite(Config) ->
	application:stop(eneo),
	ok.

init_per_group(_GroupName, Config) ->
	Config.

end_per_group(_GroupName, _Config) ->
	ok.

init_per_testcase(_TestCase, Config) ->
	C = proplists:get_value(conn, Config),
	ct:pal("C: ~p", [C]),
	{ok, Sql} = file:read_file(code:priv_dir(eneo) ++ "/sql/init.sql"),
	{ok, C2} = test_lib:db(),
	Res = epgsql:squery(C2, "select 1;"),
	ct:pal("Res: ~p", [Res]),
	%test_lib:init_db(C),
	[{c2, C2}|Config].

end_per_testcase(_TestCase, _Config) ->
	ok.

groups() ->
	[].

all() ->
	[
	 get_messages, 
	 valid_message_case
	].

get_messages(Config) ->
	{ok, "200", _, "[]"} = ibrowse:send_req("http://127.0.0.1:8080/rooms/!r1:localhost/messages", [], get).


